//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.239
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace JoyOs.FileSystem.Properties {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("JoyOs.FileSystem.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ..
        /// </summary>
        public static string Back {
            get {
                return ResourceManager.GetString("Back", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Атрибуты [{0}]:\n\nПоследний доступ: {1}\nДата создания: {2}\nПоследнее изменение: {3}\nРазмер файла: {4} байт\nТип файла: {5}\nАтрибуты: {6}.
        /// </summary>
        public static string FileAtrebutesString {
            get {
                return ResourceManager.GetString("FileAtrebutesString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Не выбраны файлы.
        /// </summary>
        public static string FileTools_FilesNotSelected {
            get {
                return ResourceManager.GetString("FileTools_FilesNotSelected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The fileSystem Interface link is null!.
        /// </summary>
        public static string FileTools_FileSystem_NullException {
            get {
                return ResourceManager.GetString("FileTools_FileSystem_NullException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Не выбран объект для получения атрибутов [null].
        /// </summary>
        public static string FileTools_NotSelectElement {
            get {
                return ResourceManager.GetString("FileTools_NotSelectElement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The fileSystem Interface link is null!.
        /// </summary>
        public static string FileTools_NullException {
            get {
                return ResourceManager.GetString("FileTools_NullException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Общий размер файлов:\n{0} байт.\nВсего файлов - {1},\nкаталогов - {2}.\n.
        /// </summary>
        public static string FolderDataString {
            get {
                return ResourceManager.GetString("FolderDataString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Нельзя извлечь изображение файл пуст.
        /// </summary>
        public static string IconExtractor_FileNullException {
            get {
                return ResourceManager.GetString("IconExtractor_FileNullException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Can&apos;t extract icon from file, bad file path.
        /// </summary>
        public static string ImageExtractor_NullArgument {
            get {
                return ResourceManager.GetString("ImageExtractor_NullArgument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на КБ.
        /// </summary>
        public static string KiloByte {
            get {
                return ResourceManager.GetString("KiloByte", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Wrong selected item.
        /// </summary>
        public static string SelectionControl_CopyPathsToClipBoard_Exception {
            get {
                return ResourceManager.GetString("SelectionControl_CopyPathsToClipBoard_Exception", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на This option is not supported.
        /// </summary>
        public static string SelectionControl_CopyPathsToClipBoard_OptionException {
            get {
                return ResourceManager.GetString("SelectionControl_CopyPathsToClipBoard_OptionException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &lt;Папка&gt;.
        /// </summary>
        public static string TypeFolder {
            get {
                return ResourceManager.GetString("TypeFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &lt;Ссылка&gt;.
        /// </summary>
        public static string TypeLink {
            get {
                return ResourceManager.GetString("TypeLink", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Задан пустой файл.
        /// </summary>
        public static string ViewDataItem_InfoNullException {
            get {
                return ResourceManager.GetString("ViewDataItem_InfoNullException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Задано неверное имя.
        /// </summary>
        public static string ViewDataItem_NameNullException {
            get {
                return ResourceManager.GetString("ViewDataItem_NameNullException", resourceCulture);
            }
        }
    }
}
